<UserControl x:Class="Streamline.Module.Admin.Views.UserMapView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"                         
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks" 
             xmlns:notifications="clr-namespace:Notifications.Wpf.Core.Controls;assembly=Notifications.Wpf.Core"
             xmlns:strings="clr-namespace:CommonStringsAdmin;assembly=CommonStringsAdmin" xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="{x:Type TextBox}" x:Key="FlatText">
            <Setter Property="Height" Value="25" />
            <Setter Property="Width" Value="350" />
            <Setter Property="Cursor" Value="IBeam" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border Background="Transparent" BorderBrush="{DynamicResource MahApps.Brushes.Accent2}" BorderThickness="1" CornerRadius="4"/>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="5,0,0,0" VerticalAlignment="Center" />
                            <Label Margin="5,0,0,0" x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" VerticalAlignment="Center"
                               Visibility="Collapsed" Foreground="Gray" FontFamily="Arial"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="WaterMarkLabel" Value="Visible"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Validation.HasError" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Background" Value="Pink"/>
                    </MultiTrigger.Setters>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type PasswordBox}" x:Key="FlatPassword">
            <Setter Property="Height" Value="25" />
            <Setter Property="Width" Value="350" />
            <Setter Property="Cursor" Value="IBeam" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Grid>
                            <Border Background="Transparent" BorderBrush="{DynamicResource MahApps.Brushes.Accent2}" BorderThickness="1" CornerRadius="4"/>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="5,0,0,0" VerticalAlignment="Center" />
                            <Label Margin="5,0,0,0" x:Name="WaterMarkLabel" VerticalAlignment="Center" FontFamily="Arial"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBox}" x:Key="FlatCombo">
            <Setter Property="Height" Value="25" />
            <Setter Property="Width" Value="350" />
            <Setter Property="Cursor" Value="Arrow" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent2}" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border Background="Transparent" BorderBrush="{DynamicResource MahApps.Brushes.Accent2}" BorderThickness="1" CornerRadius="4"/>
                            <ComboBox Background="Transparent" BorderThickness="0" BorderBrush="Transparent" Text="{Binding StationRole,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">
                                <ComboBoxItem Content="Admin"/>
                                <ComboBoxItem Content="Operator"/>
                            </ComboBox>
                        </Grid>
                       
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="FlatTextBlock">
            <Setter Property="Height" Value="20" />
            <Setter Property="Width" Value="350" />
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type Label}" x:Key="FlatLabel">
            <Setter Property="Margin" Value="0,20,0,0" />
            <Setter Property="Width" Value="350" />
            <Setter Property="VerticalAlignment"  Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
    </UserControl.Resources>
    <Grid >
        <ScrollViewer>
            <GroupBox Header="{Binding Caption}" ScrollViewer.VerticalScrollBarVisibility="Auto">
                <Border  Margin="10" Width="Auto"  MaxWidth="600" CornerRadius="5" BorderThickness="0.5" BorderBrush="{DynamicResource MahApps.Brushes.Accent}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.05*"/>
                            <RowDefinition Height="0.05*"/>
                            <RowDefinition Height="0.05*"/>
                            <RowDefinition Height="0.05*"/>
                            <RowDefinition Height="0.05*"/>
                            <RowDefinition Height="0.05*"/>
                            <RowDefinition Height="0.05*"/>
                            <RowDefinition Height="0.05*"/>
                            <RowDefinition Height="0.05*"/>
                            <RowDefinition Height="0.05*"/>
                            <RowDefinition Height="0.05*"/>
                            <RowDefinition Height="0.05*"/>
                            <RowDefinition Height="0.05*"/>
                            <RowDefinition Height="0.05*"/>
                            <RowDefinition Height="0.05*"/>
                            <RowDefinition Height="0.05*"/>
                            <RowDefinition Height="0.2*"/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0"  Content="{x:Static strings:UIStrings.StationName}" Style="{StaticResource FlatLabel}"></Label>
                        <TextBox Grid.Row="1" Style="{StaticResource FlatText}" Tag="{x:Static strings:UIStrings.StationNamePlaceHolder}"
                             Text="{Binding StationCommonName,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">

                        </TextBox>
                        <Label Grid.Row="2" Content="{x:Static strings:UIStrings.StationUnit}" Style="{StaticResource FlatLabel}"></Label>
                        <TextBox Grid.Row="3" Style="{StaticResource FlatText}" Tag="{x:Static strings:UIStrings.StationUnitPlaceHolder}"
                             Text="{Binding StationUnitId,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">

                        </TextBox>
                        <Label Grid.Row="4"  Content="{x:Static strings:UIStrings.EmployeeID}" Style="{StaticResource FlatLabel}"></Label>
                        <TextBox Grid.Row="5" Tag="{x:Static strings:UIStrings.EmployeeIDPlaceHolder}"  Style="{StaticResource FlatText}"
                             Text="{Binding EmployeeID,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">

                        </TextBox>
                        <Label Grid.Row="6"  Content="{x:Static strings:UIStrings.Name}"  Style="{StaticResource FlatLabel}"></Label>
                        <TextBox Grid.Row="7"  Tag="{x:Static strings:UIStrings.NamePlaceHolder}"  Style="{StaticResource FlatText}" Text="{Binding Name,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">

                        </TextBox>
                        <Label Grid.Row="8"   Content="{x:Static strings:UIStrings.StationRole}"  Style="{StaticResource FlatLabel}"></Label>
                        <TextBox Grid.Row="9"  Tag="{x:Static strings:UIStrings.StationRolePlaceHolder}" Style="{StaticResource FlatCombo}" >
                            
                        </TextBox>
                       
                        <Label Grid.Row="10"  Content="{x:Static strings:UIStrings.CommonName}" Style="{StaticResource FlatLabel}"></Label>
                        <TextBox Grid.Row="11" Tag="{x:Static strings:UIStrings.CommonNamePlaceHolder}"  Style="{StaticResource FlatText}"  Text="{Binding CommonName,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">

                        </TextBox>
                        <Label Grid.Row="12"    Content="{x:Static strings:UIStrings.LoginName}"  Style="{StaticResource FlatLabel}"></Label>
                        <TextBox Grid.Row="13" Tag="{x:Static strings:UIStrings.LoginNamePlaceHolder}" Style="{StaticResource FlatText}" Text="{Binding LoginName}"></TextBox>

                        <Label Grid.Row="14"    Content="{x:Static strings:UIStrings.Password}"  Style="{StaticResource FlatLabel}"></Label>
                        <PasswordBox Grid.Row="15" Style="{StaticResource FlatPassword}" x:Name="Password"  VerticalContentAlignment="Center" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PasswordChanged" >
                                    <i:InvokeCommandAction Command="{Binding PasswordChangedCommand}"  CommandParameter="{Binding ElementName=Password,  Mode=OneWay}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </PasswordBox>
                        <StackPanel Grid.Row="16" VerticalAlignment="Top" Margin="10" Width="250" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.3*"/>
                                    <ColumnDefinition Width="0.3*"/>
                                    <ColumnDefinition Width="0.3*"/>
                                </Grid.ColumnDefinitions>
                                <Button  Grid.Column="1" Height="32" Width="64" Command="{Binding SaveCommnad}">
                                    <iconPacks:PackIconMaterial  Kind="ContentSaveAll"  />
                                </Button>
                                <Button Grid.Column="2" Height="32" Width="64" Command="{Binding RemoveCommnad}"  HorizontalAlignment="Left">
                                    <iconPacks:PackIconMaterial  Kind="Delete"  />
                                </Button>
                                <Button  Grid.Column="0" Height="32" Width="64" Command="{Binding CancelCommnad}" HorizontalAlignment="Right">
                                    <iconPacks:PackIconMaterial  Kind="Cancel"  />
                                </Button>
                            </Grid>
                        </StackPanel>
                    </Grid>
                </Border>
            </GroupBox>
        </ScrollViewer>
        <notifications:NotificationArea  MaxItems="3"  x:Name="WindowArea" Position="BottomLeft" />
    </Grid>
</UserControl>
